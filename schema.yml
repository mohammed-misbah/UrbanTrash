openapi: 3.0.3
info:
  title: Django UrbanTrash WasteManagement
  version: 0.0.0
paths:
  /api/address/:
    post:
      operationId: api_address_create
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/biowaste/:
    post:
      operationId: api_biowaste_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BioWaste'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BioWaste'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BioWaste'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BioWaste'
          description: ''
  /api/login:
    post:
      operationId: api_login_create
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create_2
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/logout:
    post:
      operationId: api_logout_create
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/logout/:
    post:
      operationId: api_logout_create_2
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/order_details/{order_detail_id}/:
    get:
      operationId: api_order_details_retrieve
      parameters:
      - in: path
        name: order_detail_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: api_order_details_update
      parameters:
      - in: path
        name: order_detail_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_order_details_destroy
      parameters:
      - in: path
        name: order_detail_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/profile/:
    get:
      operationId: api_profile_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: api_profile_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: api_profile_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/register:
    post:
      operationId: api_register_create
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/register/:
    post:
      operationId: api_register_create_2
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/scrapwaste/:
    post:
      operationId: api_scrapwaste_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScrapWaste'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScrapWaste'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScrapWaste'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrapWaste'
          description: ''
  /api/user:
    get:
      operationId: api_user_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/:
    get:
      operationId: api_user_retrieve_2
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/userapi:
    get:
      operationId: api_userapi_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_userapi_partial_update
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_userapi_destroy
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/userlist:
    get:
      operationId: api_userlist_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/waste_booking/:
    post:
      operationId: api_waste_booking_create
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/wastecategory/{id}/:
    get:
      operationId: api_wastecategory_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WasteCategory'
          description: ''
    post:
      operationId: api_wastecategory_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WasteCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WasteCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WasteCategory'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasteCategory'
          description: ''
    delete:
      operationId: api_wastecategory_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    BioWaste:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          type: integer
          nullable: true
        wastename:
          type: string
          maxLength: 100
        description:
          type: string
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        image:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category
      - created_at
      - description
      - id
      - image
      - price
      - wastename
      - weight
    PatchedUserProfile:
      type: object
      properties:
        user:
          type: integer
        profile_picture:
          type: string
          format: uri
        email:
          type: string
          format: email
          maxLength: 100
        phone_number:
          type: string
          maxLength: 50
    ScrapWaste:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          type: integer
          nullable: true
        scrapname:
          type: string
          maxLength: 100
        description:
          type: string
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        image:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category
      - created_at
      - description
      - id
      - image
      - price
      - scrapname
      - weight
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        email:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 12
        password:
          type: string
          writeOnly: true
      required:
      - email
      - id
      - name
      - password
      - phone
    UserProfile:
      type: object
      properties:
        user:
          type: integer
        profile_picture:
          type: string
          format: uri
        email:
          type: string
          format: email
          maxLength: 100
        phone_number:
          type: string
          maxLength: 50
      required:
      - user
    WasteCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        image:
          type: string
          format: uri
        recyclable:
          type: boolean
        description:
          type: string
      required:
      - id
      - name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
